{"ast":null,"code":"var _jsxFileName = \"/Users/chamundeswari/Documents/projects/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CardList from './components/card-list/card-list';\nimport './components/card-list/card-list.component.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      const searchString = event.target.value.toLocaleLowerCase();\n      this.setState(() => {\n        return {\n          searchString\n        };\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      searchString: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const {\n      monsters,\n      searchString\n    } = this.state;\n    const {\n      onSearchChange\n    } = this;\n    const fileteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchString);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: //console.log({startingArray:this.state.monsters});\n        onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: fileteredMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chamundeswari/Documents/projects/monsters-rolodex/src/App.js"],"names":["Component","CardList","App","constructor","onSearchChange","event","searchString","target","value","toLocaleLowerCase","setState","state","monsters","componentDidMount","fetch","then","response","json","users","render","fileteredMonsters","filter","monster","name","includes"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,sCAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,gDAAP;;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,cAfc,GAeIC,KAAD,IAAU;AACzB,YAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,iBAAnB,EAArB;AACA,WAAKC,QAAL,CAAc,MAAI;AAChB,eAAO;AAACJ,UAAAA;AAAD,SAAP;AACD,OAFD;AAGD,KApBa;;AAEZ,SAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXN,MAAAA,YAAY,EAAC;AAFF,KAAb;AAID;;AAEDO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKR,QAAL,CAAc;AAC3BE,MAAAA,QAAQ,EAAEM;AADiB,KAAd,CAFjB;AAKD;;AAQDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACP,MAAAA,QAAD;AAAUN,MAAAA;AAAV,QAAwB,KAAKK,KAAnC;AACA,UAAM;AAACP,MAAAA;AAAD,QAAmB,IAAzB;AACA,UAAMgB,iBAAiB,GAAGR,QAAQ,CAACS,MAAT,CAAiBC,OAAD,IAAW;AACnD,aAAOA,OAAO,CAACC,IAAR,CAAad,iBAAb,GAAiCe,QAAjC,CAA0ClB,YAA1C,CAAP;AACF,KAF0B,CAA1B;AAGA,wBACE;AAAA,8BACE;AACA,QAAA,SAAS,EAAC,QADV;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,WAAW,EAAC,iBAHZ;AAIA,QAAA,QAAQ,EACN;AACAF,QAAAA;AANF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEgB;AAApB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,oBADF;AAcD;;AA3CyB;;AA8C5B,eAAelB,GAAf","sourcesContent":["import { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CardList from './components/card-list/card-list';\nimport './components/card-list/card-list.component.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchString:\"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({\n        monsters: users\n      }));\n  }\n  onSearchChange = (event) =>{\n    const searchString = event.target.value.toLocaleLowerCase();    \n    this.setState(()=>{\n      return {searchString};\n    });\n  }\n   \n  render() {\n    const {monsters,searchString}=this.state;\n    const {onSearchChange} = this;\n    const fileteredMonsters = monsters.filter((monster)=>{\n      return monster.name.toLocaleLowerCase().includes(searchString);\n   });\n    return (\n      <>\n        <input \n        className=\"search\" \n        type=\"search\" \n        placeholder='search monsters' \n        onChange={\n          //console.log({startingArray:this.state.monsters});\n          onSearchChange\n\n          }/>\n        <CardList monsters={fileteredMonsters}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}