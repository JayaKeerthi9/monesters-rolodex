{"ast":null,"code":"var _jsxFileName = \"/Users/chamundeswari/Documents/projects/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CardList from './components/card-list/card-list';\nimport './components/card-list/card-list.component.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          console.log(event.target.value);\n          const fileteredMonsters = this.state.monsters.filter(() => {});\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        children: this.state.monsters.map(monster => /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: monster.name\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chamundeswari/Documents/projects/monsters-rolodex/src/App.js"],"names":["Component","CardList","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","render","event","console","log","target","value","fileteredMonsters","filter","map","monster","name","id"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,sCAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,gDAAP;;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAC3BP,MAAAA,QAAQ,EAAEM;AADiB,KAAd,CAFjB;AAKD;;AAGDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACA,QAAA,SAAS,EAAC,QADV;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,WAAW,EAAC,iBAHZ;AAIA,QAAA,QAAQ,EAAGC,KAAD,IAAS;AACjBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,gBAAMC,iBAAiB,GAAG,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,MAApB,CAA2B,MAAI,CAAE,CAAjC,CAA1B;AACC;AAPH;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,QAAD;AAAA,kBAEI,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,GAApB,CAAwBC,OAAO,iBAAI;AAAA,oBAAsBA,OAAO,CAACC;AAA9B,WAASD,OAAO,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAnC;AAFJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADF;AAkBD;;AApCyB;;AAuC5B,eAAetB,GAAf","sourcesContent":["import { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CardList from './components/card-list/card-list';\nimport './components/card-list/card-list.component.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({\n        monsters: users\n      }));\n  }\n\n\n  render() {\n    return (\n      <>\n        <input \n        className=\"search\" \n        type=\"search\" \n        placeholder='search monsters' \n        onChange={(event)=>{\n          console.log(event.target.value);\n          const fileteredMonsters = this.state.monsters.filter(()=>{})\n          }}></input>\n        <CardList>\n          {\n            this.state.monsters.map(monster => <h5 key={monster.id}>{monster.name}</h5>)\n          }\n        </CardList>\n\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}